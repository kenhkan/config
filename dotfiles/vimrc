" Compatibility hacks
set shell=/bin/bash
set nocompatible

" NeoBunlde
if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#rc(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
NeoBundleFetch 'Shougo/neobundle.vim'

" NeoBundle stuff
NeoBundle 'Shougo/vimproc'
NeoBundle 'Lokaltog/vim-easymotion'
NeoBundle 'scrooloose/nerdtree'
NeoBundle 'kchmck/vim-coffee-script'
NeoBundle 'Shougo/unite.vim'
NeoBundle 'scrooloose/nerdcommenter'
NeoBundle 'digitaltoad/vim-jade'
NeoBundle 'ninegrid/vim-fbp'
NeoBundle 'plasticboy/vim-markdown'
NeoBundle 'wavded/vim-stylus'
NeoBundle 'mintplant/vim-literate-coffeescript'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'christoomey/vim-tmux-navigator'
NeoBundle 'jistr/vim-nerdtree-tabs'
NeoBundle 'gcmt/taboo.vim'

" Required for NeoBundle
filetype plugin indent on

" NeoBundle installation check.
NeoBundleCheck

" Highlighting
syntax enable
set number
set ruler

" Use relative line numbering
set nonumber
set relativenumber
set rnu

" Indentation
set smartindent
set autoindent

" No hard wrap
set wrap
set tw=0
set fo=cq
set wm=0

" Use spaces, not tabs
set tabstop=2
set shiftwidth=2
set expandtab
set softtabstop=2

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

" Tab completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*

" Backspace
set backspace=indent,eol,start

" Status bar
set laststatus=2

" Yank to clipboard
set clipboard=unnamed

" Always show tab bar
set showtabline=2

" Leader
let mapleader=" "

" Taboo tabs
let g:taboo_tab_format='  %N  '
let g:taboo_renamed_tab_format='  %N %f  '

" Show tab guides
set lcs=tab:\⁞\
set list listchars=tab:\ \ ,trail:·

" Clean VIM artifacts on write
au BufWritePost * :silent! :syntax sync fromstart<cr>:redraw!<cr>


"----------"
" MAPPINGS "
"----------"

" Reload source
nmap <Leader>z :so ~/.vimrc<CR>

" No highlight
nmap <Leader>p :noh<CR>

" Switch case
nnoremap ` ~

" Command
nnoremap ' :

" Repeat last command
nnoremap <Leader>r .

" Reselect visual block after indent/outdent
vnoremap < <gv
vnoremap > >gv

" Normally Y copies the whole row - not from cursor to EOL like other
" capitals. Make Y behave like other capitals
noremap Y y$

" Save
nmap <Leader>w :w<CR>
" Save and quit
nmap <Leader>q :q<CR>
" Remove buffer
nmap <Leader>x :bd<CR>

" Reload current file
nmap <Leader>e :e<CR>
" New file
nmap <Leader>v :vert new<CR>
nmap <Leader>b :new<CR>

" Clean trailing space
nnoremap <Leader>c :%s/<Space>\+$//<CR>

" Split screen, horizontall and vertically
nmap <Leader>i <C-w>v
nmap <Leader>o <C-w>s

" Move among splits in normal mode
nmap <Leader>h <C-W>h
nmap <Leader>l <C-W>l
nmap <Leader>k <C-W>k
nmap <Leader>j <C-W>j

" Move to next split
nmap <Leader>n <C-W>w
nmap <Leader>m <C-W>W

" Indentation in visual mode
vnoremap <Leader>h <gv
vnoremap <Leader>l >gv

" Shortcuts for scrolling
nmap K <C-u>
nmap J <C-d>

" Commenting
vnoremap <Leader>k <Leader>clgv
vnoremap <Leader>j <Leader>cugv

" Max out the height of the current split
nmap <Leader>t <C-W>_
" Max out the width of the current split
nmap <Leader>y <C-W>\|
" Normalize all split sizes, which is very handy when resizing terminal
nmap <Leader>u <C-W>=

" NERDTree
nmap <Leader>g :NERDTreeTabsToggle<CR>
" Close NERDTree on file opened
let NERDTreeQuitOnOpen = 1

" Search by file/buffer name
nnoremap <Leader>d :Unite<Space>file_rec/async<CR>
" Search directory content
nnoremap <Leader>s :Unite<Space>grep:.<CR>
" Select buffer
nnoremap <Leader>a :Unite<Space>-quick-match<Space>buffer<CR>

" Enable yank history
let g:unite_source_history_yank_enable = 1

" Disable folding in Markdown
let g:vim_markdown_folding_disabled=1

" Redo
map r <C-r>

" Use sane (i.e. normal) regexes
noremap <Leader>f /\v

" Search previous
nmap m N

" git with fugitive
nmap <Leader>' :Gstatus<CR>
nmap <Leader>; :Gcommit<CR>
nmap <Leader>/ :Gcommit --amend<CR>
nmap <Leader>` :Gdiff<CR>
